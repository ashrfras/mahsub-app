#ئورد مفترض ك __بتشدبي من '//cdn.jsdelivr.net/npm/__بتشدبي@8.0.1/+esm'؛
ئورد مفترض ك __بتشدبي من '/pouchdb-9.0.0.js'؛
#ئورد '/pouchdb-find.js'؛
ئورد وضيفة؛
ئورد مفتاحين من نوعمركب؛
ئعلن مركب معلوقاب؛
ئعلن مركب خيائستنسخ؛
ئعلن مركب بيامزامنة؛
ئعلن مركب بتشمرفق؛
ئعلن مركب بتشوتيقة؛
ئعلن مركب نتجقاب؛
ئعلن مركب خيائجلب؛
ئعلن مركب خيائستعلم؛
ئعلن _بتشدبي (ئسم، ئستيق؟)؛
ئعلن بتشدبي (نصية نصئتصال)؛
ئعلن مدخل ()؛
ئعلن ئستنسخ (بتشدبي مصدر، بتشدبي هدف، خيائستنسخ خيا؟) ك وعد مركب {عدد كمقرئ، منطق تمام}؛
ئعلن زامن (بتشدبي مصدر، بتشدبي هدف، خيائستنسخ خيا؟) ك وعد مركب {بيامزامنة سحب، بيامزامنة دفع}؛
ئعلن ئستنسخ_نصية (نصية مصدر، نصية هدف، خيائستنسخ خيا) ك وعد مركب {عدد كمقرئ، منطق تمام}؛
ئعلن بتشدبي.معلو () ك وعد معلوقاب؛
ئعلن بتشدبي.خدفهرس (نصية[] حقلين، نصية ئسم؟، نصية نوع؟، نصية وتصم؟) ك وعد منطق؛
ئعلن بتشدبي.ئستعلم (مركب حدد، نصية[] حقلين؟، نصية[] رتتب؟، عدد ئحصر؟، عدد تجاوز؟) ك وعد نتجقاب؛
ئعلن بتشدبي.ئهدم () ك وعد منطق؛
ئعلن بتشدبي.ئجلب (نصية معرف، خيائجلب خيا؟) ك وعد بتشوتيقة؛
ئعلن بتشدبي.ردعديد(خيائستعلم خيا؟) ك وعد مركب {عدد كمسطر، بتشوتيقة[] وتيقات}؛
ئعلن بتشدبي.خدعديد (بتشوتيقة[] وتيقات) ك وعد مركب[] {منطق نجح، نصية معرف، نصية مراجعة}؛
ئعلن بتشدبي.ئوضع (بتشوتيقة وتيقة) ك وعد مركب {منطق نجح، نصية معرف، نصية مراجعة}؛
ئعلن بتشدبي.خدواحد (بتشوتيقة وتيقة) ك وعد مركب {منطق نجح، نصية معرف، نصية مراجعة}؛
ئعلن _قموئستنسخ = {حي:'live'، ئعدمحا:'retry'، فلتر:'filter'، معرفات:'doc_ids'، معطيات:'query_params'، 
	مشهد:'view'، حدد:'selector'، مند:'since'، دقتقلب:'heartbeat'، مهلة:'timeout'، 
	حجمدفعة:'batch_size'، حددفعة:'batches_limit'}؛
ئعلن _قموئجلب = {مراجعة:'rev'، مراجعات:'revs'، معلوجعات:'revs_info'، جعامفتوحات:'open_revs'،
	صدامات:'conflicts'، مرفقات:'attachments'، ئتنائي:'binary'، ئحدت:'latest'}؛
ئعلن _قموئستعلم = {معوتيقات:'include_docs'، صدامات:'conflicts'، مرفقات:'attachments'، ئتنائي:'binary'، مفتبداية:'startkey'،
	مفتنهاية:'endkey'، حدئقصا:'limit'، تجاوز:'skip'}؛
ئعلن مركب بتشوتيقة:
	نصية _معرف،
	نصية _مراجعة،
	منطق _محدوف،
	بتشمرفق[] _مرفقات،
	...
تم
ئعلن مركب خيائجلب:
	نصية مراجعة،
	منطق مراجعات،
	منطق معلوجعات،
	نصية[] جعامفتوحات،
	منطق صدامات،
	منطق مرفقات،
	منطق ئتنائي،
	منطق ئحدت
تم
ئعلن مركب بتشمرفق:
	نصية ئسم،
	نصية نوع،
	منوع بيا
تم
ئعلن مركب معلوقاب:
	نصية ئسمقاب، #ئسم قاعدة البيانات
	عدد كموتيقة، #عدد الوتيقات في القاعدة
	نصية مضيف #ئسم مضيف القاعدة
تم
ئعلن مركب بيامزامنة:
	عدد كمخطئقرائة،
	عدد كمقرئ،
	عدد كمكتب،
	عدد وقتنهاية،
	منوع خطئات،
	منطق تمام،
	عدد وقتبداية،
	نصية حالة
تم
ئعلن مركب نتجقاب:
	بتشوتيقة[] وتيقات،
	نصية تحدير،
	مركب ئحصاتنف،
	نصية بوكمارك
تم
ئعلن مركب خيائستنسخ:
	منطق حي، #live
    منطق ئعدمحا، #retry
    وضيفة فلتر، #filter
    نصية[] معرفات، #doc_ids
    مركب معطيات، #query_params
    نصية مشهد، #view
    مركب حدد، #selector
    عدد مند، #since
    عدد دقتقلب، #heartbeat
    عدد مهلة، #timeout
    عدد حجمدفعة، #batch_size
    عدد حددفعة #batches_limit
تم
ئعلن مركب خيائستعلم:
	منطق معوتيقات، #include_docs
	منطق صدامات، #conflicts
	منطق مرفقات، #attachments
	منطق ئتنائي، #binary
	نصية مفتبداية،
	نصية مفتنهاية، #endkey
	عدد حدئقصا، #limit
	عدد تجاوز #skip
تم
ئعلن _بتشدبي (ئسم، ئستيق؟):
	يختصر __بتشدبي؛
تم
ئعلن بتشدبي (نصية نصئتصال):
	يملك بتش؛
	
	ئدا نصئتصال.يتضمن('@'):
		نصية[] ئتص = نصئتصال.عووض('https://'، '').قسسم('@')؛
		نصية _ولوجيات = ئتص[0]؛
		نصية رابط = ئتص[1]؛
		نصية[] ولوجيات = _ولوجيات.قسسم(':')؛
		
		دع مدخ = {
			auth: {
				username: ولوجيات[0]،
				password: ولوجيات[1]
			}
		}؛
		
		هدا.بتش = _بتشدبي (ئسم: "https://_{رابط}"، ئستيق: مدخ)؛
	وئلا:
		هدا.بتش = _بتشدبي (ئسم: نصئتصال)؛
	تم
تم
ئعلن بتشدبي.خدواحد (بتشوتيقة وتيقة) ك وعد مركب {منطق نجح، نصية معرف، نصية مراجعة}:
	ئرجع ريتما هدا.ئوضع(وتيقة)؛
تم
ئعلن بتشدبي.ئوضع (بتشوتيقة وتيقة) ك وعد مركب {منطق نجح، نصية معرف، نصية مراجعة}:
	دع وتق = {
		_id: وتيقة._معرف،
		_deleted: وتيقة._محدوف،
		_rev: وتيقة._مراجعة،
		_attachments: {}
	}؛
	#نعالج المرفقات
	دع مرفقات = وتق['_attachments']؛
	ئدا وتيقة._مرفقات:
		لكل مرفق في وتيقة._مرفقات:
			دع مرف = {
				type: مرفق.نوع،
				data: مرفق.بيا
			}؛
			مرفقات[مرفق.ئسم] = مرف؛
		تم
	تم
	#نعالج بقية الحقلين
	لكل مفت في مفتاحين(وتيقة):
		ئدا ليس مفت.يبدئب('_'):
			وتق[مفت] = وتيقة[مفت]؛
		تم
	تم
	دع نتج = ريتما هدا.بتش['put'](وتق)؛
	ئرجع {
		نجح: نتج['ok']،
		معرف: نتج['id']،
		مراجعة: نتج['rev']
	}؛
تم
ئعلن بتشدبي.ئستعلم (مركب حدد، نصية[] حقلين؟، نصية[] رتتب؟، عدد ئحصر؟، عدد تجاوز؟) ك وعد نتجقاب:
	دع مدخ = {}؛
	
	مدخ.selector = حدد؛
	ئدا رتتب: 
		مدخ.sort = رتتب؛
	تم
	ئدا ئحصر: 
		مدخ.limit = ئحصر؛
	تم
	ئدا تجاوز: 
		مدخ.skip = تجاوز؛
	تم
	ئدا حقلين: 
		مدخ.fields = حقلين؛
	تم
	
	دع نتج = ريتما هدا.بتش['find'](مدخ)؛
	بتشوتيقة[] وتيقات = []؛
	
	لكل عنصر في نتج.docs:
		وتيقات.ئدفع({
			_معرف: عنصر._id،
			_مراجعة: عنصر._rev،
			_محدوف: عنصر._deleted،
			...عنصر
		})؛
	تم
	
	ئرجع {
		وتيقات: وتيقات،
		تحدير: نتج.warning،
		ئحصاتنف: نتج.execution_stats،
		بوكمارك: نتج.bookmark
	}؛
تم
ئعلن بتشدبي.معلو () ك وعد معلوقاب:
	دع معلو = ريتما هدا.بتش['info']()؛
	ئرجع {
		ئسمقاب: معلو.db_name،
		كموتيقة: معلو.doc_count،
		مضيف: معلو.host
	}؛
تم
ئعلن بتشدبي.ئهدم () ك وعد منطق:
	دع نتج = ريتما هدا.بتش['destroy']()؛
	ئرجع نتج['ok']؛
تم
ئعلن بتشدبي.خدفهرس (نصية[] حقلين، نصية ئسم؟، نصية نوع؟، نصية وتصم؟) ك وعد منطق:
	دع فه = {
		index: {}
	}؛
	ئدا حقلين: 
		فه.index.fields = حقلين؛ 
	تم
	ئدا ئسم: 
		فه.index.name = ئسم؛ 
	تم
	ئدا نوع: 
		فه.index.type = نوع؛ 
	تم
	ئدا وتصم: 
		فه.index.ddoc = وتصم؛ 
	تم
	
	دع نتج = ريتما هدا.بتش['createIndex'](فه)؛
	ئرجع (نتج['result'] == 'created')؛
تم
ئعلن بتشدبي.ردعديد(خيائستعلم خيا؟) ك وعد مركب {عدد كمسطر، بتشوتيقة[] وتيقات}:
	دع نتج؛
	دع مدخ = {
		include_docs: صحيح
	}؛

	لكل مفتاح في مفتاحين(خيا):
		نصية قمفتاح = _قموئستعلم[مفتاح]؛
		مدخ[قمفتاح] = خيا[مفتاح]؛
	تم
	
	حاول:
		نتج = ريتما هدا.بتش['allDocs'](مدخ)؛
	ئستدرك:
		ئرجع عدم؛
	تم
	
	بتشوتيقة[] وتيقات = []؛
	
	لكل عنصر في نتج.rows:
		دع وتق = عنصر.doc؛
		وتيقات.ئدفع({
			_معرف: وتق._id،
			_مراجعة: وتق._rev،
			_محدوف: وتق._deleted،
			...وتق
		})؛
	تم
	
	ئرجع {
		كمسطر: نتج.total_rows،
		وتيقات: وتيقات
	}؛
تم
ئعلن بتشدبي.خدعديد (بتشوتيقة[] وتيقات) ك وعد مركب[] {منطق نجح، نصية معرف، نصية مراجعة}:
	منوع[] مدخوتيقات = []؛
	لكل وتيقة في وتيقات:
		دع وتق = {
			_id: وتيقة._معرف،
			_deleted: وتيقة._محدوف،
			_rev: وتيقة._مراجعة
		}؛
		#نعالج بقية الحقلين
		لكل مفت في مفتاحين(وتيقة):
			ئدا ليس مفت.يبدئب('_'):
				وتق[مفت] = وتيقة[مفت]؛
			تم
		تم
		مدخوتيقات.ئدفع(وتق)؛
	تم
	منوع[] نتج = ريتما هدا.بتش['bulkDocs'](مدخوتيقات)؛
	مركب[] {نجح، معرف، مراجعة} نتيجة؛
	لكل نت في نتج:
		نتيجة.ئدفع({
			نجح: نت['ok']،
			معرف: نت['id']،
			مراجعة: نت['rev']
		})؛
	تم
	ئرجع نتيجة؛
تم
ئعلن بتشدبي.ئجلب (نصية معرف، خيائجلب خيا؟) ك وعد بتشوتيقة:
	دع نتج؛
	ئدا خيا:
		دع مدخ = {}؛
		لكل مفتاح في مفتاحين(خيا):
			نصية قمفتاح = _قموئجلب[مفتاح]؛
			مدخ[قمفتاح] = خيا[مفتاح]؛
		تم
		حاول:
			نتج = ريتما هدا.بتش['get'](معرف، مدخ)؛
		ئستدرك:
			ئرجع عدم؛
		تم
	وئلا:
		حاول:
			نتج = ريتما هدا.بتش['get'](معرف)؛
		ئستدرك:
			ئرجع عدم؛
		تم
	تم
	
	ئرجع {
		_معرف: نتج._id،
		_مراجعة: نتج._rev،
		_محدوف: نتج._deleted،
		_مرفقات: نتج._attachements،
		...نتج
	}؛
تم
ئعلن ئستنسخ (بتشدبي مصدر، بتشدبي هدف، خيائستنسخ خيا؟) ك وعد مركب {عدد كمقرئ، منطق تمام}:
	دع مدخ = عدم؛
	ئدا خيا:
		مدخ = {}؛
		لكل مفتاح في مفتاحين(خيا):
			نصية قمفتاح = _قموئستنسخ[مفتاح]؛
			مدخ[قمفتاح] = خيا[مفتاح]؛
		تم
	تم
	دع نتج = ريتما __بتشدبي['replicate'](مصدر.بتش، هدف.بتش، مدخ)؛
	ئرجع {
		كمقرئ: نتج.docs_read،
		تمام: نتج.ok
	}؛
تم
ئعلن ئستنسخ_نصية (نصية مصدر، نصية هدف، خيائستنسخ خيا) ك وعد مركب {عدد كمقرئ، منطق تمام}:
	دع مدخ = عدم؛
	ئدا خيا:
		مدخ = {}؛
		لكل مفتاح في مفتاحين(خيا):
			نصية قمفتاح = _قموئستنسخ[مفتاح]؛
			مدخ[قمفتاح] = خيا[مفتاح]؛
		تم
	تم
	دع نتج = ريتما __بتشدبي['replicate'](مصدر، هدف، مدخ)؛
	ئرجع {
		كمقرئ: نتج.docs_read،
		تمام: نتج.ok
	}؛
تم
ئعلن زامن (بتشدبي مصدر، بتشدبي هدف، خيائستنسخ خيا؟) ك وعد مركب {بيامزامنة سحب، بيامزامنة دفع}:
	دع مدخ = {}؛
	ئدا خيا:
		لكل مفتاح في مفتاحين(خيا):
			نصية قمفتاح = _قموئستنسخ[مفتاح]؛
			مدخ[قمفتاح] = خيا[مفتاح]؛
		تم
	تم
	دع نتج؛
	ئدا خيا:
		نتج = ريتما __بتشدبي['sync'](مصدر.بتش، هدف.بتش، مدخ)؛
	وئلا:
		نتج = ريتما __بتشدبي['sync'](مصدر.بتش، هدف.بتش)؛
	تم
	دع سحب = نتج['pull']؛
	دع دفع = نتج['push']؛
	ئرجع {
		سحب: {
			كمخطئقرائة: سحب.doc_write_failures،
			كمقرئ: سحب.docs_read،
			كمكتب: سحب.docs_written،
			وقتنهاية: سحب.end_time،
			خطئات: سحب.errors،
			تمام: سحب.ok،
			وقتبداية: سحب.start_time،
			حالة: سحب.status
		}،
		دفع: {
			كمخطئقرائة: دفع.doc_write_failures،
			كمقرئ: دفع.docs_read،
			كمكتب: دفع.docs_written،
			وقتنهاية: دفع.end_time،
			خطئات: دفع.errors،
			تمام: دفع.ok،
			وقتبداية: دفع.start_time،
			حالة: دفع.status		
		}
	}؛
تم
ئعلن مدخل ():
	#قل __بتشفايند؛
	#__بتشدبي.plugin(__بتشفايند)؛
تم