ئورد مكون، عنصر، عنصرمخصص، عنصرئشتمل؛
ئورد الكل ك رياضيات من رياضيات؛
ئورد النافدة من نافدة؛
ئورد تصريحسمة، ئطاردوم؛
ئورد صحيحمننصية من عدد؛
ئعلن شبكي ()؛
ئعلن مدخل ()؛
ئعلن شبكي.ئضبطشبكة () ك مركب {عدد كمعم، عدد عرضمدخ}؛
ئعلن شبكي.صيير ()؛
ئعلن شبكي.عندتحجيمنافدة ()؛
ئعلن شبكي.حممل ()؛
ئعلن شبكي.حججمعنصرماسنري (عنصرئشتمل عنص)؛
ئعلن شبكي.حججمعنصراتماسنري ()؛
ئعلن شبكي.حددت ()؛
ئعلن شبكي ():
	يمدد مكون()؛
	يملك نصية[] فجوة،
		عدد عموصغ،
		عدد عموسط،
		عدد عموكب،
		عدد عموكج،
		منطق هلماسنري،
		منطق هلطولي،
		عنصرئشتمل ئب،
		عدد عرضقديم،
		عدد فجوص،
		عدد فجوع؛
		
	يملك مركب { عدد كمعم، عدد عرضمدخ } حالة = {
		كمعم: 0،
		عرضمدخ: 0
	}؛
		
	هدا.ئب = هدا.عنصرئب؛
		
	نصية فج = هدا.ردخاصية('فجوة') ئو '0'؛
	هدا.فجوة = فج.قسسم(' ')؛
	
	هدا.عموصغ = صحيحمننصية(هدا.ردخاصية('عموصغ') ئو '2')؛
	هدا.عموسط = صحيحمننصية(هدا.ردخاصية('عموسط') ئو '3')؛
	هدا.عموكب = صحيحمننصية(هدا.ردخاصية('عموكب') ئو '4')؛
	هدا.عموكج = صحيحمننصية(هدا.ردخاصية('عموكج') ئو '5')؛
	
	هدا.هلطولي = هدا.لهخاصية('طولي')؛
	هدا.هلماسنري = هدا.لهخاصية('ماسنري')؛
	
	هدا.فجوص = صحيحمننصية(هدا.فجوة[0])؛
	هدا.فجوع = صحيحمننصية(هدا.فجوة[1] ئدا هدا.فجوة.طول > 1 وئلا هدا.فجوة[0])؛
تم
ئعلن شبكي.حججمعنصراتماسنري ():
	عنصر[] بنين = هدا.بنين؛
	لكل ئبن في بنين:
		هدا.حججمعنصرماسنري(ئبن ك عنصرئشتمل)؛
	تم
تم
ئعلن شبكي.حددت ():
	هدا.ئربطحدتين()؛
	هدا.سمة['gridTemplateColumns'] = "repeat(%{هدا.حالة.كمعم}, %{هدا.حالة.عرضمدخ}px"؛
	هدا.سمة['gridRowGap'] = "%{هدا.فجوص}px"؛
	هدا.سمة['gridColumnGap'] = "%{هدا.فجوع}px"؛
	ئدا هدا.هلماسنري:
		هدا.سمة['gridAutoRows'] = '0'؛
		هدا.حججمعنصراتماسنري()؛
	تم
	#هدا.ئطلقحدت(حدتمخصص جديد('تحديت'))؛
تم
ئعلن شبكي.صيير ():
	هدا.سمة['display'] = 'grid'؛
	ئرجع (
		<فجوة></فجوة>
		<سمة>
			x-شبكي img { width:100% }
			x-شبكي video { width:100% }
		</سمة>
	)؛
تم
ئعلن شبكي.ئضبطشبكة () ك مركب {عدد كمعم، عدد عرضمدخ}:
	طالما (هدا.ئب لا= عدم) وو (ليس هدا.ئب.عرضداخلي):
		هدا.ئب = هدا.ئب.عنصرئب؛
	تم
	ئدا ليس هدا.ئب:
		ئرجع {
			كمعم: 0،
			عرضمدخ: 0
		}؛
	تم
	عدد عرضناف = هدا.ئب.عرضداخلي؛
	هدا.عرضقديم = عرضناف؛
	عدد صغ = 604؛
	عدد مت = 1007؛
	عدد كب = 1200؛
	عدد كمعم = هدا.عموكج؛
	ئدا عرضناف <= صغ:
		كمعم = هدا.عموصغ؛
	وئلا ئدا عرضناف <= مت:
		كمعم = هدا.عموسط؛
	وئلا ئدا عرضناف <= كب:
		كمعم = هدا.عموكب؛
	تم
	عدد فجوات = هدا.فجوع × (كمعم-1)؛
	عدد عرضناف_بلافج = عرضناف - فجوات؛
	عدد عرضمدخ = عرضناف_بلافج ÷ كمعم؛
	ئرجع {
		كمعم،
		عرضمدخ
	}؛
تم
ئعلن شبكي.عندتحجيمنافدة ():
	ئدا هدا.ئب:
		عدد عرضجديد = هدا.ئب.عرضداخلي؛
		ئدا هدا.عرضقديم لا= عرضجديد:
			مركب {عدد كمعم، عدد عرضمدخ} نتج = هدا.ئضبطشبكة()؛
			ئدا (نتج.كمعم لا= هدا.حالة.كمعم) ئو (نتج.عرضمدخ لا= هدا.حالة.عرضمدخ):
				هدا.خدحالة({
					كمعم: نتج.كمعم،
					عرضمدخ: نتج.عرضمدخ
				})؛
			تم
		تم
	تم
تم
ئعلن شبكي.حممل ():
	مركب {عدد كمعم، عدد عرضمدخ} نتج = هدا.ئضبطشبكة()؛
	ئدا نتج:
		هدا.خدحالة({
			كمعم: نتج.كمعم،
			عرضمدخ: نتج.عرضمدخ
		})؛
	تم
	النافدة.ئضفمستمعحدت('تحجيم'، دالة(): هدا.عندتحجيمنافدة())؛
تم
ئعلن شبكي.حججمعنصرماسنري (عنصرئشتمل عنص):
	تصريحسمة تصريح = النافدة.ردسمةمحسوبة(هدا)؛

	عدد فجوسطر = صحيحمننصية(تصريح.ردقيمتخاصية('grid-row-gap'))؛
	عدد طولسطر = صحيحمننصية(تصريح.ردقيمتخاصية('grid-auto-rows'))؛

	عدد سبانسطر = رياضيات.ئستكبر((عنص.ردئطارمشهد().طول + فجوسطر) ÷ (طولسطر + فجوسطر))؛
	عنص.سمة['gridRowEnd'] = "span %{سبانسطر}"؛
تم
ئعلن مدخل ():
	عنصرمخصص.سججل('شبكي'، شبكي)؛
تم